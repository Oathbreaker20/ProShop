{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productReviewCreate","success","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","dispatch","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","a","axios","get","data","response","message","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","pageNumber","listProducts","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","description","countInStock","disabled","length","review","createdAt","productId","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9dec1cfc.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport  thunk  from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productReviewCreate : productReviewCreateReducer,\r\n    productTopRated : productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails : orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n    orderListMy : orderListMyReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : { }\r\n\r\nconst initialState = {\r\n    cart : {cartItems : cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin : {userInfo : userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                products: action.payload.products, \r\n                pages:action.payload.pages, \r\n                page:action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews:[] } }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products:[] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products:[]}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress:{} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product===item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product===existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems,item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return {\r\n                    ...state,\r\n                    shippingAddress: action.payload\r\n                }\r\n\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {  }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user:{} }, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state,loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return { user:{} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success:true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading:true, orderItems:[], shippingAddress:{} }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {  }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders : []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push(`/`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products'\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button \r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux' \r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown} from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Route render = {({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : \r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link><i className=\"fas fa-user\"></i> Sign In</Nav.Link>\r\n                        </LinkContainer> }\r\n                        \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from \"axios\"\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email,password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email,password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //We want to log in the user right away after registration\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`,config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`,user,config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n            </Row>\r\n        </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} \r\n                className={ value>=1 ? 'fas fa-star' : value>=0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={ value>=2 ? 'fas fa-star' : value>=1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={ value>=3 ? 'fas fa-star' : value>=2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={ value>=4 ? 'fas fa-star' : value>=3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={ value>=5 ? 'fas fa-star' : value>=4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span> {text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps ={\r\n    color: '#f8e825'\r\n}\r\n\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <div className='my-3'>\r\n                        <Rating \r\n                        value = {product.rating}\r\n                        text = {`${product.numReviews} reviews`}                    \r\n                        />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant,children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n        animation='border' \r\n        role='status' \r\n        style={{ width:'100px', height:'100px', margin:'auto', display:'block'}}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` } >\r\n                    <Pagination.Item active={x + 1 === page} >\r\n                        {x + 1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, {useEffect} from 'react'\r\nimport {Link}  from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async(dispatch) => {\r\n    try {\r\n        dispatch({ type:PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type:PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type:PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { loading, error, products, page, pages } = productList \r\n\r\n    useEffect( ()=> {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    },[dispatch, keyword, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            { loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n            <>\r\n            <Row>\r\n                {products.map ( product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}/>\r\n            </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button,Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success : successProductReview, error: errorProductReview} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {rating, comment}))\r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n        <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </Link>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n            <>\r\n            <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid></Image>\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating\r\n                            value = {product.rating}\r\n                            text = {`${product.numReviews} Reviews`}\r\n                        />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price : ${product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description : {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price:</Col>\r\n                                <Col><strong>${product.price}</strong></Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Status:</Col>\r\n                                <Col>{product.countInStock >0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                        <Form.Control \r\n                                        as='select' \r\n                                        value={qty} \r\n                                        onChange={(e)=>setQty(e.target.value)}>\r\n                                        {\r\n                                        [...Array(product.countInStock).keys()].map(x => (\r\n                                            <option key={x + 1} value = {x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))\r\n                                        }   \r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                             onClick={addToCartHandler}\r\n                             className='btn-block'\r\n                             type='button' \r\n                             disabled={product.countInStock === 0}\r\n                             >\r\n                                Add to Cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length === 0 && <Message>No Reviews yet!</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map(review => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating value={review.rating} />\r\n                                <p>{review.createdAt}</p>\r\n                                <p>{review.comment}</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Write a Customer Review</h2>\r\n                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                            {userInfo ? (\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label>Rating</Form.Label>\r\n                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                            <option value=''>Select...</option>\r\n                                            <option value='1'>1-Poor</option>\r\n                                            <option value='2'>2-Fair</option>\r\n                                            <option value='3'>3-Average</option>\r\n                                            <option value='4'>4-Good</option>\r\n                                            <option value='5'>5-Very Good</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='comment'>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control\r\n                                         as='textarea'\r\n                                         row='3'\r\n                                         value={comment}\r\n                                         onChange={(e => setComment(e.target.value))}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type='submit' variant='primary'>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Form>\r\n                            ) : (\r\n                            <Message>Please<Link to='/login'>Login</Link> to write a review!</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        )}\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, \r\n         CART_REMOVE_ITEM,\r\n         CART_SAVE_PAYMENT_METHOD,\r\n         CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n} \r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React,{ useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row,Col,ListGroup,Image,Form,Button,Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>${item.price}</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        as='select' \r\n                                        value={item.qty} \r\n                                        onChange={(e)=> dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                        {\r\n                                        [...Array(item.countInStock).keys()].map(x => (\r\n                                            <option key={x + 1} value = {x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))\r\n                                        }   \r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() =>\r\n                                    removeFromCartHandler(item.product)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc,item) => acc+item.qty, 0)}) items</h2>\r\n                        ${cartItems.reduce((acc,item) => acc + item.qty*item.price , 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                         type='button' \r\n                         className='btn-block' \r\n                         disabled={cartItems.length ===0}\r\n                         onClick={checkoutHandler}\r\n                         >\r\n                            Proceed to Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ( {location, history} ) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector( (state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect( () => {\r\n        if(userInfo) {\r\n            history.push(redirect)  \r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n    return <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                 type='email'\r\n                 placeholder='Enter email'\r\n                 value={email}\r\n                 onChange= { (e) => setEmail(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                 type='password'\r\n                 placeholder='Enter password'\r\n                 value={password}\r\n                 onChange= { (e) => setPassword(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Sign In\r\n            </Button>\r\n        </Form>\r\n\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register here</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ( {location, history} ) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector( (state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect( () => {\r\n        if(userInfo) {\r\n            history.push(redirect)  \r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name,email,password))\r\n        }\r\n    }\r\n\r\n    return <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange= { (e) => setName(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                 type='email'\r\n                 placeholder='Enter email'\r\n                 value={email}\r\n                 onChange= { (e) => setEmail(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                 type='password'\r\n                 placeholder='Enter password'\r\n                 value={password}\r\n                 onChange= { (e) => setPassword(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                 type='password'\r\n                 placeholder='Confirm password'\r\n                 value={confirmPassword}\r\n                 onChange= { (e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Register\r\n            </Button>\r\n        </Form>\r\n\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n                Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ( {location, history} ) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector( (state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector( (state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector( (state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector( (state) => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    useEffect( () => {\r\n        if(!userInfo) {\r\n            history.push('/login')  \r\n        }else {\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            //DISPATCH UPDATE PROFILE\r\n            dispatch(updateUserProfile({id : user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange= { (e) => setName(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange= { (e) => setEmail(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange= { (e) => setPassword(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange= { (e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n        </Col>\r\n\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIEVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )\r\n            }\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from \"axios\"\r\nimport { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`,order,config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`,config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState} from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n        \r\n    }\r\n    \r\n\r\n    return <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                type='text'\r\n                placeholder='Enter address'\r\n                value={address}\r\n                required\r\n                onChange= { (e) => setAddress(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='city'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                type='text'\r\n                placeholder='Enter city'\r\n                value={city}\r\n                required\r\n                onChange= { (e) => setCity(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='postalCode'>\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                type='text'\r\n                placeholder='Enter postal Code'\r\n                value={postalCode}\r\n                required\r\n                onChange= { (e) => setPostalCode(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='country'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                type='text'\r\n                placeholder='Enter country'\r\n                value={country}\r\n                required\r\n                onChange= { (e) => setCountry(e.target.value)} ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState} from 'react'\r\nimport { Form, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n        \r\n    }\r\n    \r\n\r\n    return <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n            \r\n            <Col>\r\n                <Form.Check\r\n                    type='radio'\r\n                    label='PayPal or Credit Card'\r\n                    id='PayPal'\r\n                    name='paymentMethod'\r\n                    value='PayPal'\r\n                    checked\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></Form.Check>\r\n                {/* <Form.Check\r\n                    type='radio'\r\n                    label='UPI'\r\n                    id='UPI'\r\n                    name='paymentMethod'\r\n                    value='UPI'\r\n                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></Form.Check> */}\r\n            </Col>\r\n\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n      } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n      }\r\n\r\n    // Calculate Prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc,item) => acc + item.price*item.qty,\r\n        0\r\n    ))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n    cart.taxPrice = addDecimals(Number((0.18 * cart.itemsPrice).toFixed(2)))\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        } \r\n        // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city},{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items: </h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty!</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems===0}\r\n                                onClick={placeOrderHandler}\r\n                                >\r\n                                Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success:successPay } = orderPay\r\n\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n\r\n        if(!order || successPay) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n    <>\r\n        <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong>{order.user.name}</p>\r\n                            <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city},{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? \r\n                            (<Message variant='success'>Delivered on {OrderScreen.deliveredAt}</Message>)\r\n                                : \r\n                            (<Message variant='danger'>Not Delivered</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? \r\n                            (<Message variant='success'>Paid on {OrderScreen.paidAt}</Message>)\r\n                                : \r\n                            (<Message variant='danger'>Not Paid</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items: </h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty!</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton  \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                            />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from'./components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nconst App = ()=> {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}